<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | Mike Nguyen</title>
    <link>https://mikenguyen.netlify.app/category/r/</link>
      <atom:link href="https://mikenguyen.netlify.app/category/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© Mike Nguyen 2023</copyright><lastBuildDate>Tue, 25 Jul 2023 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://mikenguyen.netlify.app/media/social_sharing_image.png</url>
      <title>R</title>
      <link>https://mikenguyen.netlify.app/category/r/</link>
    </image>
    
    <item>
      <title>Create your own package in R</title>
      <link>https://mikenguyen.netlify.app/post/create-your-own-package-in-r/</link>
      <pubDate>Tue, 25 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/create-your-own-package-in-r/</guid>
      <description>


&lt;div id=&#34;from-.r-files-to-r-packages-a-game-changer-for-empirical-researchers&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;strong&gt;From .R Files to R Packages: A Game Changer for Empirical Researchers&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://media.tenor.com/YZPnGuPeZv8AAAAd/coding.gif&#34; width=&#34;80%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Hello, fellow data enthusiasts! Today, we’re going to embark on a journey that will take us from a scattered mess of .R files to the organized, efficient world of R packages. Why, you ask? Well, let me tell you a story.&lt;/p&gt;
&lt;p&gt;Once upon a time, I was just like you. I had a bunch of utility functions scattered across numerous .R files. Every time I needed a function I wrote months, weeks, or even days ago, I had to embark on a treasure hunt through my files. More often than not, I ended up re-writing the function because it was faster than searching for it. Sound familiar?&lt;/p&gt;
&lt;p&gt;Well, I finally decided it was time to take the next step and start wrapping all my utility functions into R packages. And let me tell you, it was a game-changer. Here’s why:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Efficiency:&lt;/strong&gt; Having your own R package can significantly speed up your workflow. Instead of re-writing the same functions over and over again, you can simply call them from your package. This not only saves time but also ensures consistency in your analyses.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Reproducibility:&lt;/strong&gt; Reproducibility is a cornerstone of good research. With an R package, you can ensure that your analyses are reproducible and transparent. This is especially important when collaborating with others or when your work is subject to peer review.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://i.redd.it/qkkqz6wsiox11.jpg&#34; width=&#34;80%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;Learning and Development:&lt;/strong&gt; Creating your own R package is a great way to deepen your understanding of R and programming principles. It encourages good practices such as writing clear, concise code and thorough documentation.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://www.quickmeme.com/img/ea/ea3b264e0bf73802d8311049b216a708736c38f492a21aec265324d0c6e800b0.jpg&#34; width=&#34;80%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;Sharing and Collaboration:&lt;/strong&gt; R packages are an excellent way to share your work and collaborate with others. By making your code available as a package, you make it easy for others to use and build upon your work. This can lead to collaborations and advancements that you may not have achieved on your own.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://img.devrant.com/devrant/rant/r_2137728_nYacL.jpg&#34; width=&#34;80%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Career Advancement:&lt;/strong&gt; Having your own R package can be a significant feather in your cap professionally. It demonstrates your proficiency in R and your ability to create reusable, efficient code. This can be a great selling point in job interviews or grant applications.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Customization:&lt;/strong&gt; With your own R package, you can create functions tailored to your specific needs. For example, if you’re a marketing researcher, you might create a function that generates plots in the style required by the American Marketing Association, like this:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;#39; @export
amatheme &amp;lt;- function() {
  ggplot2::theme_bw(base_size = 14, base_family = &amp;quot;serif&amp;quot;) + 
    ggplot2::theme(
      panel.grid.major = ggplot2::element_blank(),
      panel.grid.minor = ggplot2::element_blank(),
      panel.border = ggplot2::element_blank(),
      line = ggplot2::element_line(),
      text = ggplot2::element_text(),
      legend.title = ggplot2::element_text(size = ggplot2::rel(0.6), face = &amp;quot;bold&amp;quot;),
      legend.text = ggplot2::element_text(size = ggplot2::rel(0.6)),
      legend.background = ggplot2::element_rect(color = &amp;quot;black&amp;quot;),
      plot.title = ggplot2::element_text(
        size = ggplot2::rel(1.2),
        face = &amp;quot;bold&amp;quot;,
        hjust = 0.5,
        margin = ggplot2::margin(b = 15)
      ),
      plot.margin = ggplot2::unit(c(1, 1, 1, 1), &amp;quot;cm&amp;quot;),
      axis.line = ggplot2::element_line(colour = &amp;quot;black&amp;quot;, linewidth = 0.8),
      axis.ticks = ggplot2::element_line(),
      axis.title.x = ggplot2::element_text(size = ggplot2::rel(1.2), face = &amp;quot;bold&amp;quot;),
      axis.title.y = ggplot2::element_text(size = ggplot2::rel(1.2), face = &amp;quot;bold&amp;quot;),
      axis.text.y = ggplot2::element_text(size = ggplot2::rel(1)),
      axis.text.x = ggplot2::element_text(size = ggplot2::rel(1))
    )
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function creates a custom ggplot2 theme that complies with the American Marketing Association style. With this function in your R package, you can easily generate plots that are ready for your next marketing paper.&lt;/p&gt;
&lt;p&gt;But the beauty of R packages is that they’re not just for marketing researchers. Anyone can use them. For example, you can check out my own package on GitHub. To install it, simply run:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;remotes::install_github(&amp;quot;mikenguyen13/mikenguyen&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Feel free to use it for your research, whether you’re in marketing, science, or just a data enthusiast like me.&lt;/p&gt;
&lt;p&gt;So, are you ready to dive into the world of R packages? Great! Let’s get started.&lt;/p&gt;
&lt;div id=&#34;setting-up&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;strong&gt;Setting Up&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;First things first, we need to install a couple of packages that will make our lives easier: devtools and roxygen2. You can install them using the following commands:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;devtools&amp;quot;)
install.packages(&amp;quot;roxygen2&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;creating-the-framework-for-your-first-package&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;strong&gt;Creating the Framework for Your First Package&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Now that we have our tools, we can start building the framework for our package. We can do this using devtools:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::create(&amp;quot;myfirstpackage&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This command creates a folder with the same name as your package name and populates it with a few files. For now, we’ll focus on the DESCRIPTION file (where all the meta-data about your package goes) and the R folder (where all your R code goes).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;adding-your-r-functions&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;strong&gt;Adding Your R Functions&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;All your R functions that you want in your R package belong in the R directory. You can create an .R file that has the same name as the function you want in it. For instance, let’s create a file called R/amatheme.R and add our function to it.&lt;/p&gt;
&lt;p&gt;Remember to add the #’ @export tag above the function. This tag indicates that the function should be “exposed” to users to use.&lt;/p&gt;
&lt;p&gt;Let’s say we have a function &lt;strong&gt;&lt;code&gt;amatheme&lt;/code&gt;&lt;/strong&gt; that we want to include in our package. We would create a new .R file in the R directory of our package, let’s call it &lt;strong&gt;&lt;code&gt;amatheme.R&lt;/code&gt;&lt;/strong&gt;. In this file, we would define our function:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;#39; @export
amatheme &amp;lt;- function() {
  # Function body goes here
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;documenting-your-functions&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;strong&gt;Documenting Your Functions&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Now, let’s talk about documentation. You know when you type ?amatheme in R and get that nice documentation? That’s what we’re going to do next. We can leverage off the roxygen2 package to document our functions.&lt;/p&gt;
&lt;p&gt;To document our &lt;strong&gt;&lt;code&gt;amatheme&lt;/code&gt;&lt;/strong&gt; function, we would add special comments above the function definition in the &lt;strong&gt;&lt;code&gt;amatheme.R&lt;/code&gt;&lt;/strong&gt; file:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;#39; Title of the function
#&amp;#39;
#&amp;#39; @description A detailed description of what the function does.
#&amp;#39; @param param1 Description of the first parameter.
#&amp;#39; @param param2 Description of the second parameter.
#&amp;#39; @return Description of the return value.
#&amp;#39; @examples 
#&amp;#39; example1
#&amp;#39; example2
#&amp;#39; @export
amatheme &amp;lt;- function(param1, param2) {
  # Function body goes here
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once you’ve got your documentation completed, you can run &lt;strong&gt;&lt;code&gt;devtools::document()&lt;/code&gt;&lt;/strong&gt; to generate the .Rd files.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;package-documentation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;strong&gt;Package Documentation&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;One of the key aspects of creating an R package is documentation. Good documentation is crucial for ensuring that others can understand and use your package. This includes not only commenting your code but also creating help files for each function and a detailed package vignette.&lt;/p&gt;
&lt;p&gt;To create a vignette for our package, we would use the &lt;strong&gt;&lt;code&gt;usethis::use_vignette(&#34;introduction&#34;)&lt;/code&gt;&lt;/strong&gt; function. This creates a template R Markdown file in the vignettes directory of our package. We can edit this file to provide a detailed introduction to our package.&lt;/p&gt;
&lt;p&gt;A package vignette is a long-form guide that provides a comprehensive overview of your package. It typically includes an introduction to the package, detailed examples of how to use each function, and any other information that users might need to understand your package.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;dependencies&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;strong&gt;Dependencies&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;When creating an R package, it’s important to carefully manage your package dependencies. These are other R packages that your package relies on. You should aim to minimize your dependencies to reduce the likelihood of conflicts and errors. When you do need to use other packages, make sure to specify them in the Imports field of your DESCRIPTION file.&lt;/p&gt;
&lt;p&gt;For example, if our package depends on ggplot2, we would add the following line to the DESCRIPTION file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Imports:
  ggplot2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;strong&gt;Data&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;If you want to include raw data files (like .csv, .tsv, .txt, etc.) in your R package, you should place them in the &lt;strong&gt;&lt;code&gt;inst/extdata&lt;/code&gt;&lt;/strong&gt; directory of your package. This is a standard location for storing raw data in R packages.&lt;/p&gt;
&lt;p&gt;Here’s how you can use such data:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Add your raw data file to the &lt;strong&gt;&lt;code&gt;inst/extdata&lt;/code&gt;&lt;/strong&gt; directory in your package. For example, you might add a file called &lt;strong&gt;&lt;code&gt;model-coef.rds&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After installing your package, you can access the data file using the &lt;strong&gt;&lt;code&gt;system.file()&lt;/code&gt;&lt;/strong&gt; function. Here’s how you can do it:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_file_path &amp;lt;- system.file(&amp;quot;extdata&amp;quot;, &amp;quot;model-coef.rds&amp;quot;, package = &amp;quot;myfirstpackage&amp;quot;)
data &amp;lt;- readRDS(data_file_path)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, &lt;strong&gt;&lt;code&gt;system.file()&lt;/code&gt;&lt;/strong&gt; generates the full system path to the data file within the installed package. Then &lt;strong&gt;&lt;code&gt;readRDS()&lt;/code&gt;&lt;/strong&gt; is used to read the data into R.&lt;/p&gt;
&lt;p&gt;Remember, the &lt;strong&gt;&lt;code&gt;inst&lt;/code&gt;&lt;/strong&gt; directory in an R package is for “installed files” - these are files that are not R code or data, but which should be included with the package. The contents of the &lt;strong&gt;&lt;code&gt;inst&lt;/code&gt;&lt;/strong&gt; directory are copied by R into the root of the package when it is installed, which is why you don’t include &lt;strong&gt;&lt;code&gt;inst&lt;/code&gt;&lt;/strong&gt; in the path when using &lt;strong&gt;&lt;code&gt;system.file()&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;rules-of-thumb-and-industry-hacks&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;strong&gt;Rules of Thumb and Industry Hacks&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Here are a few rules of thumb and industry hacks to keep in mind when creating your R package:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Keep it simple:&lt;/strong&gt; Try to keep your package focused on one task or theme. This makes it easier for others to understand what your package does and how to use it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use meaningful function names:&lt;/strong&gt; Your function names should be descriptive and follow a consistent naming convention. This makes it easier for users to understand what each function does.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Test your package:&lt;/strong&gt; Make sure to thoroughly test your package before releasing it. This includes checking that all functions work as expected and that all documentation is clear and accurate.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Keep learning:&lt;/strong&gt; Creating an R package is a learning process. Don’t be afraid to make mistakes and keep improving your package over time.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;installing-and-using-your-r-package&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;strong&gt;Installing and Using Your R Package&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;So, we’ve got our functions, we’ve got our documentation, what’s next? It’s time to install and use our package! We can use the &lt;strong&gt;&lt;code&gt;devtools::install()&lt;/code&gt;&lt;/strong&gt; function to install our R package into our R system library. Then we can load up our package with &lt;strong&gt;&lt;code&gt;library(&#34;myfirstpackage&#34;)&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;distributing-your-r-package&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;strong&gt;Distributing Your R Package&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Now that we’ve got our shiny new R package, how do we share it with the world? The easiest way is to distribute it through GitHub.&lt;/p&gt;
&lt;p&gt;To distribute our package on GitHub, we first need to create a new repository on GitHub. Then, we can use Git to commit our package files and push them to the GitHub repository. Here’s an example of how to do this in the terminal:&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;# Navigate to the directory of your package
cd path/to/your/package

# Initialize a new Git repository
git init

# Add all files in the directory to the Git repository
git add .

# Commit the files
git commit -m &amp;quot;Initial commit&amp;quot;

# Add the GitHub repository as a remote
git remote add origin https://github.com/yourusername/yourrepository.git

# Push the files to the GitHub repository
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once you’ve pushed your package to GitHub, anyone can install it using the following command:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;yourusername/myfirstpackage&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And that’s it! You’ve successfully created, documented, installed, and distributed your very own R package. But wait, there’s more! You can also check out my own package on GitHub. To install it, simply run:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;remotes::install_github(&amp;quot;mikenguyen13/mikenguyen&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Feel free to use it for your research, whether you’re in marketing, science, or just a data enthusiast like me. Happy coding!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://undo.io/media/uploads/files/Code_for_six_minutes_meme.jpg&#34; width=&#34;40%&#34; /&gt;&lt;img src=&#34;https://i.redd.it/m0xy5opltgm11.jpg&#34; width=&#34;40%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Adding utteranc.es to blogdown academic hugo theme</title>
      <link>https://mikenguyen.netlify.app/post/adding-utteranc-es-to-blogdown-academic-hugo-theme/</link>
      <pubDate>Sat, 10 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/adding-utteranc-es-to-blogdown-academic-hugo-theme/</guid>
      <description>


&lt;p&gt;After several hours struggling with multiple recommendations by&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.davidfong.org/post/hugoacademiccommentswithutterances/&#34;&gt;David Fong&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://masalmon.eu/2019/10/02/disqus/&#34;&gt;Salmon&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://jvelezmagic.com/blog/2021-05-06-learn-how-to-use-utterances-with-acadamic-hugo-blogdown/&#34;&gt;Jesus Velez&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.pugillum.com/posts/2021_11_28_github_issues_as_comments/&#34;&gt;pugillum&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://robb.sh/posts/add-utterances-comments-to-hugo/&#34;&gt;robb&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://mscipio.github.io/post/utterances-comment-engine/&#34;&gt;Michele Scipioni&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I still cannot see my comment section using &lt;a href=&#34;https://utteranc.es/&#34; class=&#34;uri&#34;&gt;https://utteranc.es/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I realize I did not have my webpage repo public. Hence, remembering to have your repo visibility option as &lt;strong&gt;Public&lt;/strong&gt; is very important !!! Go to your repo online, under Settings tab, you can find “Change repository visibility” at the bottom of the page, change it to &lt;strong&gt;public&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;And I recommend using the simplest method to change your theme. Alternatively, you can use sources provided above.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Install &lt;a href=&#34;https://github.com/apps/utterances&#34;&gt;utteranc.es&lt;/a&gt; on your repo. You can either
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Choose to install to every repo (not recommended)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install only to your blog repo (recommended)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Go to &lt;a href=&#34;https://utteranc.es/&#34;&gt;utteranc.es&lt;/a&gt; and fill our your form. Copy the copy snippet&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;themes/wowchemy/layouts/_default/single.html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add the code snippet provided by &lt;a href=&#34;https://utteranc.es/&#34;&gt;utteranc.es&lt;/a&gt; right above &lt;code&gt;{{ partial &#34;page_footer&#34; . }}&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- --&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;div class=&amp;quot;col-12 col-lg-10ish article-style&amp;quot;&amp;gt;
    &amp;lt;script src=&amp;quot;https://utteranc.es/client.js&amp;quot;
        repo=&amp;quot;mikenguyen13/bio&amp;quot;
        issue-term=&amp;quot;pathname&amp;quot;
        label=&amp;quot;utterances_blog&amp;quot;
        theme=&amp;quot;github-light&amp;quot;
        crossorigin=&amp;quot;anonymous&amp;quot;
        async&amp;gt;
    &amp;lt;/script&amp;gt;
    &amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Go to &lt;code&gt;config/_default/params.toml&lt;/code&gt; and make sure that under “Comment”, &lt;code&gt;engine = 0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For the commentable section, you can customize as you wish. For example:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;commentable = {page = false, post = true, docs = false, project = false, publication = true, talk = true}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Handle duplicate packages in different paths</title>
      <link>https://mikenguyen.netlify.app/post/handle-duplicate-packages-in-different-paths/</link>
      <pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/handle-duplicate-packages-in-different-paths/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/handle-duplicate-packages-in-different-paths/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;If you work with multiple work stations (multiple computers/laptops) sharing the same cloud folder. You might encounter this problem. Your Rstudio in different computers will have different default paths to install and load packages. For each computer, you will see something like this:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Cloud-path: “Users/yourname/cloud_drive/Documents/R/win-library/version&lt;/li&gt;
&lt;li&gt;Local-path: “Program Files/R/R_version/library”&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To see your library path, type &lt;code&gt;.libPaths()&lt;/code&gt; in the console.&lt;/p&gt;
&lt;p&gt;To always have the same library path on multiple devices, you have to create &lt;code&gt;.Renviron&lt;/code&gt; on each device&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;usethis::edit_r_environ()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After opening the &lt;code&gt;.Renviron&lt;/code&gt; file, type in &lt;code&gt;R_LIBS_USER = &#34;file_path&#34;&lt;/code&gt; where “file_path” is your desired cloud location.&lt;/p&gt;
&lt;p&gt;To remove all duplicate packages, you can either remove them based on version (solution by this &lt;a href=&#34;https://stackoverflow.com/questions/15170399/change-r-default-library-path-using-libpaths-in-rprofile-site-fails-to-work&#34;&gt;post&lt;/a&gt;) or based on path location&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
pkgs &amp;lt;- installed.packages()
pkgs &amp;lt;- as.data.frame(pkgs)

# get the list of duplicate packages
dupes &amp;lt;- pkgs %&amp;gt;% select(Package, Version, LibPath) %&amp;gt;% 
  group_by(Package) %&amp;gt;% 
  filter(n_distinct(Version, na.rm = TRUE) &amp;gt; 1)

# remove duplicate packages
# delete packages based on library path
dupes %&amp;gt;%
  mutate(chosen_path = if_else(LibPath == &amp;quot;chosen_file_path_to_keep&amp;quot;, 1, 0)) %&amp;gt;%
  filter(chosen_path != 1) %&amp;gt;% 
  purrr::pmap(~ remove.packages(..1, ..3))
 
dupes %&amp;gt;%
  # delete packages based on version (delete older ones)
  group_by(Package) %&amp;gt;%
  arrange(desc(Version)) %&amp;gt;%
  filter(Version != first(Version)) %&amp;gt;%
  purrr::pmap(~ remove.packages(..1, ..3))&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Correct Bibtex format</title>
      <link>https://mikenguyen.netlify.app/post/correct-bibtex-format/</link>
      <pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/correct-bibtex-format/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/correct-bibtex-format/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;If you work with bookdown, Latex, Python, or anything that uses BibTex as the underlying citation document, you will understand the struggle that sometimes your document cannot be rendered correctly because you might miss a comma, year, or author. But in R, you will not know where to look for the error. Hence, two websites help me a lot with this process:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://flamingtempura.github.io/bibtex-tidy/&#34;&gt;Bibtex-tidy&lt;/a&gt;: It will automatically reformat everything for you. I usually choose to have the document sorted by “author”.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://biblatex-linter.herokuapp.com/&#34;&gt;Lint your BibLatex&lt;/a&gt;: It will find the exact troublesome citation for you.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Johnson-Neyman for meta analysis</title>
      <link>https://mikenguyen.netlify.app/post/johnson-neyman-for-meta-analysis/</link>
      <pubDate>Thu, 03 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/johnson-neyman-for-meta-analysis/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/johnson-neyman-for-meta-analysis/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;In applied research, we typically look at moderation effect of a moderator on the relationship between a predictor and an outcome variable. However, looking at the interaction term alone is very misleading. Hence, researcher typically employ the Johnson-Neyman technique in probing the moderation effect. This technique helps find the region where the predictor effect is significant.&lt;/p&gt;
&lt;p&gt;Even though &lt;code&gt;interactions&lt;/code&gt; package in R is very versatile that it can work with pretty much every model for probing the interaction effect, it couldn’t play well with &lt;code&gt;metafor&lt;/code&gt; package (&lt;a href=&#34;https://bookdown.org/mike/data_analysis/moderation.html&#34;&gt;for more details on moderation&lt;/a&gt;). Hence, we have to write a custom function for this purpose.&lt;/p&gt;
&lt;p&gt;A little reminder of the moderation effect&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
Y = b_1 X+ b_2 W + b_3 XW
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Johnson-Neyman finds the values of the moderators &lt;span class=&#34;math inline&#34;&gt;\(W\)&lt;/span&gt; such that the p-value of the conditional effect of the predictor is equal to the level of significance &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
t_{crit} = \frac{b_1 + b_3 W}{\sqrt{s^2_{b1} + 2 Ws_{b_1b_3} + W^2 s^2_{b_3}}}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The solution for &lt;span class=&#34;math inline&#34;&gt;\(W\)&lt;/span&gt; is&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
W = \frac{-2(t_{crit}^2 s_{b_1b_3} - b_1b_3)\pm \sqrt{(2t^2_{crit}s_{b_1b_3}- 2b_1 b_3)^2-4(t_{crit}^2s^2_{b_3} - b_3^2)(t_{crit}^2 s^2_{b_1}-b_1^2)}}{2(t^2_{crit}s^2_{b_3}-b^2_3)}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;To implement the custom function, I model the code after &lt;a href=&#34;https://rpubs.com/bachl/jn-plot&#34;&gt;Marko Bachl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To get the Johnson-Neyman signficance area&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;jnt = function(.rma.mv, predictor, moderator, alpha = .05) {
    require(stringi)
    library(tidyverse)
    
    # get coefficient for the predictor
    b1 = .rma.mv$b[predictor, 1]
    # get coefficient for the interaction term
    b3 = .rma.mv$b[paste0(predictor, &amp;quot;:&amp;quot;, moderator), 1]
    
    # standard error for the predictor term
    se_b1 = .rma.mv$se[which(rownames(summary(.rma.mv)$b) == predictor)]
    
    # standard error for the interaction term
    se_b3 = .rma.mv$se[which(rownames(summary(.rma.mv)$b) == paste0(predictor, &amp;quot;:&amp;quot;, moderator))]
    
    # covariance for the predictor and the interaction term
    COV_b1b3 = .rma.mv$vb[which(rownames(summary(.rma.mv)$b) == predictor), which(rownames(summary(.rma.mv)$b) == paste0(predictor, &amp;quot;:&amp;quot;, moderator))]
    
    # the t-critical value
    t_crit = qt(1 - alpha / 2, df.residual(.rma.mv))
    
    
    # see Bauer &amp;amp; Curran, 2005
    a = t_crit ^ 2 * se_b3 ^ 2 - b3 ^ 2
    
    b = 2 * (t_crit ^ 2 * COV_b1b3 - b1 * b3)
    
    c = t_crit ^ 2 * se_b1 ^ 2 - b1 ^ 2
    
    jn = c((-b - sqrt(b ^ 2 - 4 * a * c)) / (2 * a),
           (-b + sqrt(b ^ 2 - 4 * a * c)) / (2 * a))
    
    JN = sort(unname(jn))
    
    # see whether it&amp;#39;s inside the two numbers or outside
    
    if (length(JN) != 0){
        # randomly pick a number between the two cutoffs
        test_num &amp;lt;- runif(1, JN[1], JN[2])
        test_theta = b1 + test_num * b3
        test_se_theta = sqrt(se_b1 ^ 2 + 2 * test_num * COV_b1b3 + test_num ^ 2 * se_b3 ^ 2)
        
        test.ci.lo_theta = test_theta - qt(1 - alpha / 2, df.residual(.rma.mv)) * test_se_theta
        test.ci.hi_theta = test_theta + qt(1 - alpha / 2, df.residual(.rma.mv)) * test_se_theta
        if (0 %in% c(test.ci.lo_theta:test.ci.hi_theta)){
            print(&amp;quot;inside the range&amp;quot;)
        } else {
            print(&amp;quot;outside the range&amp;quot;)
        }
    }
    
    
    return(JN)
    rm(.rma.mv)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the results are 0, 1, 2, then the whole range of the predictors are significant.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;theta_plot = function(.rma.mv,
                      predictor,
                      moderator,
                      alpha = .05,
                      jn = F) {
    require(dplyr)
    require(ggplot2)
    theme_set(theme_minimal())
    require(stringi)
    
    .data = tibble(
        # get coefficient for the predictor
        b1 = .rma.mv$b[predictor, 1],
        # get coefficient for the interaction term
        b3 = .rma.mv$b[paste0(predictor, &amp;quot;:&amp;quot;, moderator), 1],
        
        Z = quantile(.rma.mv$X[, moderator], seq(0, 1, .01)),
        
        theta = b1 + Z * b3,
        
        # standard error for the predictor term
        se_b1 = .rma.mv$se[which(rownames(summary(.rma.mv)$b) == predictor)],
        
        # standard error for the interaction term
        se_b3 = .rma.mv$se[which(rownames(summary(.rma.mv)$b) == paste0(predictor, &amp;quot;:&amp;quot;, moderator))],
        
        # covariance for the predictor and the interaction term
        COV_b1b3 = .rma.mv$vb[which(rownames(summary(.rma.mv)$b) == predictor), which(rownames(summary(.rma.mv)$b) == paste0(predictor, &amp;quot;:&amp;quot;, moderator))], 
        
        se_theta = sqrt(se_b1 ^ 2 + 2 * Z * COV_b1b3 + Z ^ 2 * se_b3 ^ 2),
        
        ci.lo_theta = theta - qt(1 - alpha / 2, df.residual(.rma.mv)) * se_theta,
        ci.hi_theta = theta + qt(1 - alpha / 2, df.residual(.rma.mv)) * se_theta
    )
    
    
    if (jn) {
        JN = jnt(
            .rma.mv = .rma.mv,
            predictor = predictor,
            moderator = moderator,
            alpha = alpha
        )
        JN_lines = geom_vline(xintercept = JN, linetype = 2)
        JN_regions = ifelse(length(JN) == 0,
                            &amp;quot;no significance regions&amp;quot;,
                            paste(round(JN, 2), collapse = &amp;quot;; &amp;quot;))
        Xlab = paste0(moderator, &amp;quot; (JN Significance Regions: &amp;quot;, JN_regions, &amp;quot;)&amp;quot;)
    } else {
        Xlab = moderator
        JN_lines = NULL
    }
    .data %&amp;gt;%
        ggplot(aes(x = Z, y = theta)) +
        geom_ribbon(aes(ymin = ci.lo_theta, ymax = ci.hi_theta), fill = &amp;quot;grey70&amp;quot;) +
        geom_line() +
        ggtitle(paste(
            &amp;quot;Conditional Effect of&amp;quot;,
            predictor,
            &amp;quot;as function of&amp;quot;,
            moderator
        )) +
        geom_hline(yintercept = 0, linetype = 2) +
        labs(x = Xlab, y = expression(theta)) +
        JN_lines +
        xlim(min(.rma.mv$X[, moderator]), max(.rma.mv$X[, moderator]))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s try it on a model&lt;/p&gt;
&lt;p&gt;Note: both the moderator and the predictor must be &lt;strong&gt;continuous&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(metafor)
mod &amp;lt;- rma.mv(yi, vi, mods = ~ year * pubstatus, random = ~ 1 | study/esid, data= dat.assink2016)
summary(mod)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Multivariate Meta-Analysis Model (k = 100; method: REML)
## 
##   logLik  Deviance       AIC       BIC      AICc 
## -66.6051  133.2102  145.2102  160.5963  146.1540   
## 
## Variance Components:
## 
##             estim    sqrt  nlvls  fixed      factor 
## sigma^2.1  0.1143  0.3381     17     no       study 
## sigma^2.2  0.1138  0.3373    100     no  study/esid 
## 
## Test for Residual Heterogeneity:
## QE(df = 96) = 447.7313, p-val &amp;lt; .0001
## 
## Test of Moderators (coefficients 2:4):
## QM(df = 3) = 9.8164, p-val = 0.0202
## 
## Model Results:
## 
##                 estimate      se     zval    pval    ci.lb    ci.ub 
## intrcpt           0.6985  0.2621   2.6655  0.0077   0.1849   1.2121  ** 
## year             -0.0928  0.0464  -1.9990  0.0456  -0.1837  -0.0018   * 
## pubstatus        -0.3308  0.2826  -1.1704  0.2418  -0.8847   0.2231     
## year:pubstatus    0.0608  0.0499   1.2170  0.2236  -0.0371   0.1586     
## 
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;jnt(mod, predictor = &amp;quot;year&amp;quot;, moderator = &amp;quot;pubstatus&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;outside the range&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -0.02071889  0.94999771&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;theta_plot(mod, predictor = &amp;quot;year&amp;quot;, moderator = &amp;quot;pubstatus&amp;quot;, jn = T)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;outside the range&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://mikenguyen.netlify.app/post/johnson-neyman-for-meta-analysis/index.en_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;
Then we interpret that the impact of year on the outcome variable is only significant when the publication status is greater than 0.95 or less than -0.02 (but this is not possible because the lower limit is 0).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setup Java with R</title>
      <link>https://mikenguyen.netlify.app/post/setup-java-with-r/</link>
      <pubDate>Thu, 13 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/setup-java-with-r/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/setup-java-with-r/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;To prevent future problems when using Java, you need to install Java to your machine correctly.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Download the correct version of Java from &lt;a href=&#34;https://www.java.com/en/download/manual.jsp&#34; class=&#34;uri&#34;&gt;https://www.java.com/en/download/manual.jsp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Right-click the Java setup app to “Run as Admin”&lt;/li&gt;
&lt;li&gt;After installing Java, go to R and let your machine know the right path to Java (Make sure you run R as Admin as well).&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Sys.setenv(JAVA_HOME=&amp;#39;C:\\Program Files\\Java\\jre1.8.0_311&amp;#39;) # for 64-bit version
Sys.setenv(JAVA_HOME=&amp;quot;C:\\Program Files (x86)\\Java\\jre1.8.0_311&amp;quot;) # for 32-bit version&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Missing Git tab in Rstudio on Windows computer</title>
      <link>https://mikenguyen.netlify.app/post/missing-git-tab-in-rstudio-on-windows-computer/</link>
      <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/missing-git-tab-in-rstudio-on-windows-computer/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/missing-git-tab-in-rstudio-on-windows-computer/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Due to a new movement in the tech industry, organizations (e.g., companies or universities) will not allow their members to have complete control of their machines (i.e., administrative privileges or running programs as administrators). Hence, if members want to use this function, they typically have to apply for permission to use the “Make Me Admin” app, which grants administrator rights for 15 minutes. This movement can seriously hinder the working process and speed. But it seems unstoppable now (i.e., an industry-wide adoption). Hence, before installing programs on your computer, you will always need to run this app first. Or else, when being asked for admin privileges, your username and password will not suffice.&lt;/p&gt;
&lt;p&gt;Moreover, another movement is where organizations only use cloud storage (e.g., Dropbox, Box, OneDrive) instead of purchasing physical hard drives. Hence, your home default directory might be changed and cause unintended consequences (e.g., disintegration between GitHub and Rstudio). For example, my organization recently implemented an org-wide integration with OneDrive. Hence, my default home directory was changed from &lt;code&gt;C:\Users\tn9k4\Documents\&lt;/code&gt; to &lt;code&gt;C:\Users\tn9k4\OneDrive - University of Missouri\Documents&lt;/code&gt;. This change disrupts my configuration between GitHub and Rstudio.&lt;/p&gt;
&lt;p&gt;I can still manually push, pull, and do various things with GitHub, but only via manually coding. T&lt;strong&gt;he Git tab in Rstudio is missing in Rstudio on Windows computers.&lt;/strong&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;I’ve tried to reinstall Git, Rstudio, and reset the Rstudio settings.&lt;/li&gt;
&lt;li&gt;I successfully cloned a repo from GitHub, but the tab would not appear.&lt;/li&gt;
&lt;li&gt;And my terminal inside Rstudio looks like a normal Window Terminal (not like that of Git Terminal).&lt;/li&gt;
&lt;li&gt;In my Global Options, my Git executable and SSH RSA key are working well.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And none of the above solutions works.&lt;/p&gt;
&lt;p&gt;Hence, a manual modification is required to fix this hiccup.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;First, we have to come back to the basics. We search for the Git on your machine. On Windows: &lt;code&gt;where git&lt;/code&gt; On Linux &amp;amp; Mac: &lt;code&gt;which git&lt;/code&gt; For me, I have three directories:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;C:\Users\tn9k4\scoop\shims\git.exe&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;C:\Users\tn9k4\AppData\Local\Programs\Git\mingw64\bin\git.exe&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;C:\Users\tn9k4\AppData\Local\Programs\Git\cmd\git.exe&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go to Tools -&amp;gt; Global Options -&amp;gt; Git/SVN, change the “Git executable” to the second path (&lt;code&gt;C:\Users\tn9k4\AppData\Local\Programs\Git\cmd\git.exe&lt;/code&gt;). The first is installed with Scoop, and your Rstudio cannot recognize it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Search on your Windows Search bar, “edit the system environment variables,” click on “Environment Variables”. Then click on “PATH” under the user variable (not the system variable). Add your bin path (e.g., &lt;code&gt;C:/Users/tn9k4/AppData/Local/Programs/Git/bin&lt;/code&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reset and Reopen your Rstudio; you should be able to see your Git tab now.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;All of the problems stem from installing only to my user directory since I don’t have admin privileges yet.&lt;/p&gt;
&lt;p&gt;To avoid these mambo jumbos, an alternative way is that you can simply uninstall git and scoop and reinstall Git with admin privileges.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Search for “Add or remove programs” in your Windows search bar. Then, uninstall “Git.”&lt;/li&gt;
&lt;li&gt;In “Terminal”, execute &lt;code&gt;scoop uninstall scoop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Then download Git 64 Standalone Installer from &lt;a href=&#34;https://git-scm.com/download/win&#34; class=&#34;uri&#34;&gt;https://git-scm.com/download/win&lt;/a&gt; (use the version according to your computer). When opening the installer, right-click to “Run as Admin,” then you have the option to install it in &lt;code&gt;C:\Program Files\&lt;/code&gt; Remember to pick “Use Git from the Windows Command Prompt” and “Enable Symbolic Links.”&lt;/li&gt;
&lt;li&gt;Open “Rstudio” with “Run as Admin”, go to Tools -&amp;gt; Global Options -&amp;gt; Terminal -&amp;gt; New terminal open with -&amp;gt; Select “Git Bash”&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Voila! You are all set again.&lt;/p&gt;
&lt;p&gt;Moral of the story: always “run as Admin” so that your system can consistently configure&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>refer to relative path in blogdown</title>
      <link>https://mikenguyen.netlify.app/post/refer-to-relative-path-in-blogdown/</link>
      <pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/refer-to-relative-path-in-blogdown/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/refer-to-relative-path-in-blogdown/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;When you write your posts/blogs on blogdown, you might not want to always refer to the absolute path appeared on your website (because you might change your domain name and all hell breaks loose).&lt;/p&gt;
&lt;p&gt;Then, to specify relative path you can&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Step 1: Change your &lt;code&gt;config.toml&lt;/code&gt; file by searching for &lt;code&gt;[permalinks]&lt;/code&gt; then include relative path for your post:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;[permalinks] 
    authors = &amp;quot;/author/:slug/&amp;quot; 
    tags = &amp;quot;/tag/:slug/&amp;quot; 
    categories = &amp;quot;/category/:slug/&amp;quot; 
    publication_types = &amp;quot;/publication-type/:slug/&amp;quot; 
    post = &amp;quot;/post/:slug&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Step 2: Then you can start writing like usual again. For example, you can find the last post &lt;code&gt;[here](/post/slug_name_for_other_post/)&lt;/code&gt; where &lt;code&gt;here&lt;/code&gt; will be highlighted with the URL to the other post.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>making your image and figure robust in bs4 bookdown</title>
      <link>https://mikenguyen.netlify.app/post/image-and-figure-robust-in-bs4-bookdown/</link>
      <pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/image-and-figure-robust-in-bs4-bookdown/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/image-and-figure-robust-in-bs4-bookdown/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;I struggle to find how to make my figures and images perfectly aligned in the center of my book. After looking around, I think I’ve found an adequate solution:&lt;/p&gt;
&lt;p&gt;Step 1: Change your image into &lt;code&gt;%&lt;/code&gt; format.&lt;/p&gt;
&lt;p&gt;Step 2: I typically change my width to &lt;code&gt;100&lt;/code&gt;, but you can also leave it as is&lt;/p&gt;
&lt;p&gt;Step 3: Go to &lt;code&gt;Attributes&lt;/code&gt; tab can put this line into the “CSS styles” box: &lt;code&gt;display: block; margin: 1em auto&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Voila! Now your image or figure should be robust to both bs4 or gitbook styles.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fold code in bookdown</title>
      <link>https://mikenguyen.netlify.app/post/fold-code-in-bookdown/</link>
      <pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/fold-code-in-bookdown/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/fold-code-in-bookdown/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Following this &lt;a href=&#34;https://stackoverflow.com/questions/45360998/code-folding-in-bookdown&#34;&gt;answer&lt;/a&gt; by Sébastien Rochette, we can fold all code chunk in bookdown by&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Create a &lt;code&gt;js&lt;/code&gt; folder in the same directory as your bookdown book&lt;/li&gt;
&lt;li&gt;Create 3 files in this &lt;code&gt;js&lt;/code&gt; folder&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;transition.js&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/* ========================================================================
 * Bootstrap: transition.js v3.3.7
 * http://getbootstrap.com/javascript/#transitions
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  &amp;#39;use strict&amp;#39;;

  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement(&amp;#39;bootstrap&amp;#39;)

    var transEndEventNames = {
      WebkitTransition : &amp;#39;webkitTransitionEnd&amp;#39;,
      MozTransition    : &amp;#39;transitionend&amp;#39;,
      OTransition      : &amp;#39;oTransitionEnd otransitionend&amp;#39;,
      transition       : &amp;#39;transitionend&amp;#39;
    }

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] }
      }
    }

    return false // explicit for ie8 (  ._.)
  }

  // http://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false
    var $el = this
    $(this).one(&amp;#39;bsTransitionEnd&amp;#39;, function () { called = true })
    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
    setTimeout(callback, duration)
    return this
  }

  $(function () {
    $.support.transition = transitionEnd()

    if (!$.support.transition) return

    $.event.special.bsTransitionEnd = {
      bindType: $.support.transition.end,
      delegateType: $.support.transition.end,
      handle: function (e) {
        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)
      }
    }
  })

}(jQuery);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;collapse.js&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/* ========================================================================
 * Bootstrap: collapse.js v3.3.7
 * http://getbootstrap.com/javascript/#collapse
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

/* jshint latedef: false */

+function ($) {
  &amp;#39;use strict&amp;#39;;

  // COLLAPSE PUBLIC CLASS DEFINITION
  // ================================

  var Collapse = function (element, options) {
    this.$element      = $(element)
    this.options       = $.extend({}, Collapse.DEFAULTS, options)
    this.$trigger      = $(&amp;#39;[data-toggle=&amp;quot;collapse&amp;quot;][href=&amp;quot;#&amp;#39; + element.id + &amp;#39;&amp;quot;],&amp;#39; +
                           &amp;#39;[data-toggle=&amp;quot;collapse&amp;quot;][data-target=&amp;quot;#&amp;#39; + element.id + &amp;#39;&amp;quot;]&amp;#39;)
    this.transitioning = null

    if (this.options.parent) {
      this.$parent = this.getParent()
    } else {
      this.addAriaAndCollapsedClass(this.$element, this.$trigger)
    }

    if (this.options.toggle) this.toggle()
  }

  Collapse.VERSION  = &amp;#39;3.3.7&amp;#39;

  Collapse.TRANSITION_DURATION = 350

  Collapse.DEFAULTS = {
    toggle: true
  }

  Collapse.prototype.dimension = function () {
    var hasWidth = this.$element.hasClass(&amp;#39;width&amp;#39;)
    return hasWidth ? &amp;#39;width&amp;#39; : &amp;#39;height&amp;#39;
  }

  Collapse.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass(&amp;#39;in&amp;#39;)) return

    var activesData
    var actives = this.$parent &amp;amp;&amp;amp; this.$parent.children(&amp;#39;.panel&amp;#39;).children(&amp;#39;.in, .collapsing&amp;#39;)

    if (actives &amp;amp;&amp;amp; actives.length) {
      activesData = actives.data(&amp;#39;bs.collapse&amp;#39;)
      if (activesData &amp;amp;&amp;amp; activesData.transitioning) return
    }

    var startEvent = $.Event(&amp;#39;show.bs.collapse&amp;#39;)
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    if (actives &amp;amp;&amp;amp; actives.length) {
      Plugin.call(actives, &amp;#39;hide&amp;#39;)
      activesData || actives.data(&amp;#39;bs.collapse&amp;#39;, null)
    }

    var dimension = this.dimension()

    this.$element
      .removeClass(&amp;#39;collapse&amp;#39;)
      .addClass(&amp;#39;collapsing&amp;#39;)[dimension](0)
      .attr(&amp;#39;aria-expanded&amp;#39;, true)

    this.$trigger
      .removeClass(&amp;#39;collapsed&amp;#39;)
      .attr(&amp;#39;aria-expanded&amp;#39;, true)

    this.transitioning = 1

    var complete = function () {
      this.$element
        .removeClass(&amp;#39;collapsing&amp;#39;)
        .addClass(&amp;#39;collapse in&amp;#39;)[dimension](&amp;#39;&amp;#39;)
      this.transitioning = 0
      this.$element
        .trigger(&amp;#39;shown.bs.collapse&amp;#39;)
    }

    if (!$.support.transition) return complete.call(this)

    var scrollSize = $.camelCase([&amp;#39;scroll&amp;#39;, dimension].join(&amp;#39;-&amp;#39;))

    this.$element
      .one(&amp;#39;bsTransitionEnd&amp;#39;, $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])
  }

  Collapse.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass(&amp;#39;in&amp;#39;)) return

    var startEvent = $.Event(&amp;#39;hide.bs.collapse&amp;#39;)
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    var dimension = this.dimension()

    this.$element[dimension](this.$element[dimension]())[0].offsetHeight

    this.$element
      .addClass(&amp;#39;collapsing&amp;#39;)
      .removeClass(&amp;#39;collapse in&amp;#39;)
      .attr(&amp;#39;aria-expanded&amp;#39;, false)

    this.$trigger
      .addClass(&amp;#39;collapsed&amp;#39;)
      .attr(&amp;#39;aria-expanded&amp;#39;, false)

    this.transitioning = 1

    var complete = function () {
      this.transitioning = 0
      this.$element
        .removeClass(&amp;#39;collapsing&amp;#39;)
        .addClass(&amp;#39;collapse&amp;#39;)
        .trigger(&amp;#39;hidden.bs.collapse&amp;#39;)
    }

    if (!$.support.transition) return complete.call(this)

    this.$element
      [dimension](0)
      .one(&amp;#39;bsTransitionEnd&amp;#39;, $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)
  }

  Collapse.prototype.toggle = function () {
    this[this.$element.hasClass(&amp;#39;in&amp;#39;) ? &amp;#39;hide&amp;#39; : &amp;#39;show&amp;#39;]()
  }

  Collapse.prototype.getParent = function () {
    return $(this.options.parent)
      .find(&amp;#39;[data-toggle=&amp;quot;collapse&amp;quot;][data-parent=&amp;quot;&amp;#39; + this.options.parent + &amp;#39;&amp;quot;]&amp;#39;)
      .each($.proxy(function (i, element) {
        var $element = $(element)
        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)
      }, this))
      .end()
  }

  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {
    var isOpen = $element.hasClass(&amp;#39;in&amp;#39;)

    $element.attr(&amp;#39;aria-expanded&amp;#39;, isOpen)
    $trigger
      .toggleClass(&amp;#39;collapsed&amp;#39;, !isOpen)
      .attr(&amp;#39;aria-expanded&amp;#39;, isOpen)
  }

  function getTargetFromTrigger($trigger) {
    var href
    var target = $trigger.attr(&amp;#39;data-target&amp;#39;)
      || (href = $trigger.attr(&amp;#39;href&amp;#39;)) &amp;amp;&amp;amp; href.replace(/.*(?=#[^\s]+$)/, &amp;#39;&amp;#39;) // strip for ie7

    return $(target)
  }


  // COLLAPSE PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data(&amp;#39;bs.collapse&amp;#39;)
      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == &amp;#39;object&amp;#39; &amp;amp;&amp;amp; option)

      if (!data &amp;amp;&amp;amp; options.toggle &amp;amp;&amp;amp; /show|hide/.test(option)) options.toggle = false
      if (!data) $this.data(&amp;#39;bs.collapse&amp;#39;, (data = new Collapse(this, options)))
      if (typeof option == &amp;#39;string&amp;#39;) data[option]()
    })
  }

  var old = $.fn.collapse

  $.fn.collapse             = Plugin
  $.fn.collapse.Constructor = Collapse


  // COLLAPSE NO CONFLICT
  // ====================

  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old
    return this
  }


  // COLLAPSE DATA-API
  // =================

  $(document).on(&amp;#39;click.bs.collapse.data-api&amp;#39;, &amp;#39;[data-toggle=&amp;quot;collapse&amp;quot;]&amp;#39;, function (e) {
    var $this   = $(this)

    if (!$this.attr(&amp;#39;data-target&amp;#39;)) e.preventDefault()

    var $target = getTargetFromTrigger($this)
    var data    = $target.data(&amp;#39;bs.collapse&amp;#39;)
    var option  = data ? &amp;#39;toggle&amp;#39; : $this.data()

    Plugin.call($target, option)
  })

}(jQuery);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;codefolding.js&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;window.initializeCodeFolding = function(show) {

  // handlers for show-all and hide all
  $(&amp;quot;#rmd-show-all-code&amp;quot;).click(function() {
    $(&amp;#39;div.r-code-collapse&amp;#39;).each(function() {
      $(this).collapse(&amp;#39;show&amp;#39;);
    });
  });
  $(&amp;quot;#rmd-hide-all-code&amp;quot;).click(function() {
    $(&amp;#39;div.r-code-collapse&amp;#39;).each(function() {
      $(this).collapse(&amp;#39;hide&amp;#39;);
    });
  });

  // index for unique code element ids
  var currentIndex = 1;

  // select all R code blocks
  var rCodeBlocks = $(&amp;#39;pre.sourceCode, pre.r, pre.python, pre.bash, pre.sql, pre.cpp, pre.stan&amp;#39;);
  rCodeBlocks.each(function() {

    // create a collapsable div to wrap the code in
    var div = $(&amp;#39;&amp;lt;div class=&amp;quot;collapse r-code-collapse&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;#39;);
    if (show)
      div.addClass(&amp;#39;in&amp;#39;);
    var id = &amp;#39;rcode-643E0F36&amp;#39; + currentIndex++;
    div.attr(&amp;#39;id&amp;#39;, id);
    $(this).before(div);
    $(this).detach().appendTo(div);

    // add a show code button right above
    var showCodeText = $(&amp;#39;&amp;lt;span&amp;gt;&amp;#39; + (show ? &amp;#39;Hide&amp;#39; : &amp;#39;Code&amp;#39;) + &amp;#39;&amp;lt;/span&amp;gt;&amp;#39;);
    var showCodeButton = $(&amp;#39;&amp;lt;button type=&amp;quot;button&amp;quot; class=&amp;quot;btn btn-default btn-xs code-folding-btn pull-right&amp;quot;&amp;gt;&amp;lt;/button&amp;gt;&amp;#39;);
    showCodeButton.append(showCodeText);
    showCodeButton
        .attr(&amp;#39;data-toggle&amp;#39;, &amp;#39;collapse&amp;#39;)
        .attr(&amp;#39;data-target&amp;#39;, &amp;#39;#&amp;#39; + id)
        .attr(&amp;#39;aria-expanded&amp;#39;, show)
        .attr(&amp;#39;aria-controls&amp;#39;, id);

    var buttonRow = $(&amp;#39;&amp;lt;div class=&amp;quot;row&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;#39;);
    var buttonCol = $(&amp;#39;&amp;lt;div class=&amp;quot;col-md-12&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;#39;);

    buttonCol.append(showCodeButton);
    buttonRow.append(buttonCol);

    div.before(buttonRow);

    // update state of button on show/hide
    div.on(&amp;#39;hidden.bs.collapse&amp;#39;, function () {
      showCodeText.text(&amp;#39;Code&amp;#39;);
    });
    div.on(&amp;#39;show.bs.collapse&amp;#39;, function () {
      showCodeText.text(&amp;#39;Hide&amp;#39;);
    });
  });

}&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Add &lt;code&gt;header.html&lt;/code&gt; in the same bookdown directory (not in &lt;code&gt;js&lt;/code&gt; folder)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;
&amp;lt;script&amp;gt;
/* ========================================================================
 * Bootstrap: transition.js v3.3.7
 * http://getbootstrap.com/javascript/#transitions
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  &amp;#39;use strict&amp;#39;;

  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement(&amp;#39;bootstrap&amp;#39;)

    var transEndEventNames = {
      WebkitTransition : &amp;#39;webkitTransitionEnd&amp;#39;,
      MozTransition    : &amp;#39;transitionend&amp;#39;,
      OTransition      : &amp;#39;oTransitionEnd otransitionend&amp;#39;,
      transition       : &amp;#39;transitionend&amp;#39;
    }

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] }
      }
    }

    return false // explicit for ie8 (  ._.)
  }

  // http://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false
    var $el = this
    $(this).one(&amp;#39;bsTransitionEnd&amp;#39;, function () { called = true })
    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
    setTimeout(callback, duration)
    return this
  }

  $(function () {
    $.support.transition = transitionEnd()

    if (!$.support.transition) return

    $.event.special.bsTransitionEnd = {
      bindType: $.support.transition.end,
      delegateType: $.support.transition.end,
      handle: function (e) {
        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)
      }
    }
  })

}(jQuery);
&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
/* ========================================================================
 * Bootstrap: collapse.js v3.3.7
 * http://getbootstrap.com/javascript/#collapse
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

/* jshint latedef: false */

+function ($) {
  &amp;#39;use strict&amp;#39;;

  // COLLAPSE PUBLIC CLASS DEFINITION
  // ================================

  var Collapse = function (element, options) {
    this.$element      = $(element)
    this.options       = $.extend({}, Collapse.DEFAULTS, options)
    this.$trigger      = $(&amp;#39;[data-toggle=&amp;quot;collapse&amp;quot;][href=&amp;quot;#&amp;#39; + element.id + &amp;#39;&amp;quot;],&amp;#39; +
                           &amp;#39;[data-toggle=&amp;quot;collapse&amp;quot;][data-target=&amp;quot;#&amp;#39; + element.id + &amp;#39;&amp;quot;]&amp;#39;)
    this.transitioning = null

    if (this.options.parent) {
      this.$parent = this.getParent()
    } else {
      this.addAriaAndCollapsedClass(this.$element, this.$trigger)
    }

    if (this.options.toggle) this.toggle()
  }

  Collapse.VERSION  = &amp;#39;3.3.7&amp;#39;

  Collapse.TRANSITION_DURATION = 350

  Collapse.DEFAULTS = {
    toggle: true
  }

  Collapse.prototype.dimension = function () {
    var hasWidth = this.$element.hasClass(&amp;#39;width&amp;#39;)
    return hasWidth ? &amp;#39;width&amp;#39; : &amp;#39;height&amp;#39;
  }

  Collapse.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass(&amp;#39;in&amp;#39;)) return

    var activesData
    var actives = this.$parent &amp;amp;&amp;amp; this.$parent.children(&amp;#39;.panel&amp;#39;).children(&amp;#39;.in, .collapsing&amp;#39;)

    if (actives &amp;amp;&amp;amp; actives.length) {
      activesData = actives.data(&amp;#39;bs.collapse&amp;#39;)
      if (activesData &amp;amp;&amp;amp; activesData.transitioning) return
    }

    var startEvent = $.Event(&amp;#39;show.bs.collapse&amp;#39;)
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    if (actives &amp;amp;&amp;amp; actives.length) {
      Plugin.call(actives, &amp;#39;hide&amp;#39;)
      activesData || actives.data(&amp;#39;bs.collapse&amp;#39;, null)
    }

    var dimension = this.dimension()

    this.$element
      .removeClass(&amp;#39;collapse&amp;#39;)
      .addClass(&amp;#39;collapsing&amp;#39;)[dimension](0)
      .attr(&amp;#39;aria-expanded&amp;#39;, true)

    this.$trigger
      .removeClass(&amp;#39;collapsed&amp;#39;)
      .attr(&amp;#39;aria-expanded&amp;#39;, true)

    this.transitioning = 1

    var complete = function () {
      this.$element
        .removeClass(&amp;#39;collapsing&amp;#39;)
        .addClass(&amp;#39;collapse in&amp;#39;)[dimension](&amp;#39;&amp;#39;)
      this.transitioning = 0
      this.$element
        .trigger(&amp;#39;shown.bs.collapse&amp;#39;)
    }

    if (!$.support.transition) return complete.call(this)

    var scrollSize = $.camelCase([&amp;#39;scroll&amp;#39;, dimension].join(&amp;#39;-&amp;#39;))

    this.$element
      .one(&amp;#39;bsTransitionEnd&amp;#39;, $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])
  }

  Collapse.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass(&amp;#39;in&amp;#39;)) return

    var startEvent = $.Event(&amp;#39;hide.bs.collapse&amp;#39;)
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    var dimension = this.dimension()

    this.$element[dimension](this.$element[dimension]())[0].offsetHeight

    this.$element
      .addClass(&amp;#39;collapsing&amp;#39;)
      .removeClass(&amp;#39;collapse in&amp;#39;)
      .attr(&amp;#39;aria-expanded&amp;#39;, false)

    this.$trigger
      .addClass(&amp;#39;collapsed&amp;#39;)
      .attr(&amp;#39;aria-expanded&amp;#39;, false)

    this.transitioning = 1

    var complete = function () {
      this.transitioning = 0
      this.$element
        .removeClass(&amp;#39;collapsing&amp;#39;)
        .addClass(&amp;#39;collapse&amp;#39;)
        .trigger(&amp;#39;hidden.bs.collapse&amp;#39;)
    }

    if (!$.support.transition) return complete.call(this)

    this.$element
      [dimension](0)
      .one(&amp;#39;bsTransitionEnd&amp;#39;, $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)
  }

  Collapse.prototype.toggle = function () {
    this[this.$element.hasClass(&amp;#39;in&amp;#39;) ? &amp;#39;hide&amp;#39; : &amp;#39;show&amp;#39;]()
  }

  Collapse.prototype.getParent = function () {
    return $(this.options.parent)
      .find(&amp;#39;[data-toggle=&amp;quot;collapse&amp;quot;][data-parent=&amp;quot;&amp;#39; + this.options.parent + &amp;#39;&amp;quot;]&amp;#39;)
      .each($.proxy(function (i, element) {
        var $element = $(element)
        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)
      }, this))
      .end()
  }

  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {
    var isOpen = $element.hasClass(&amp;#39;in&amp;#39;)

    $element.attr(&amp;#39;aria-expanded&amp;#39;, isOpen)
    $trigger
      .toggleClass(&amp;#39;collapsed&amp;#39;, !isOpen)
      .attr(&amp;#39;aria-expanded&amp;#39;, isOpen)
  }

  function getTargetFromTrigger($trigger) {
    var href
    var target = $trigger.attr(&amp;#39;data-target&amp;#39;)
      || (href = $trigger.attr(&amp;#39;href&amp;#39;)) &amp;amp;&amp;amp; href.replace(/.*(?=#[^\s]+$)/, &amp;#39;&amp;#39;) // strip for ie7

    return $(target)
  }


  // COLLAPSE PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data(&amp;#39;bs.collapse&amp;#39;)
      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == &amp;#39;object&amp;#39; &amp;amp;&amp;amp; option)

      if (!data &amp;amp;&amp;amp; options.toggle &amp;amp;&amp;amp; /show|hide/.test(option)) options.toggle = false
      if (!data) $this.data(&amp;#39;bs.collapse&amp;#39;, (data = new Collapse(this, options)))
      if (typeof option == &amp;#39;string&amp;#39;) data[option]()
    })
  }

  var old = $.fn.collapse

  $.fn.collapse             = Plugin
  $.fn.collapse.Constructor = Collapse


  // COLLAPSE NO CONFLICT
  // ====================

  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old
    return this
  }


  // COLLAPSE DATA-API
  // =================

  $(document).on(&amp;#39;click.bs.collapse.data-api&amp;#39;, &amp;#39;[data-toggle=&amp;quot;collapse&amp;quot;]&amp;#39;, function (e) {
    var $this   = $(this)

    if (!$this.attr(&amp;#39;data-target&amp;#39;)) e.preventDefault()

    var $target = getTargetFromTrigger($this)
    var data    = $target.data(&amp;#39;bs.collapse&amp;#39;)
    var option  = data ? &amp;#39;toggle&amp;#39; : $this.data()

    Plugin.call($target, option)
  })

}(jQuery);
&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
window.initializeCodeFolding = function(show) {

  // handlers for show-all and hide all
  $(&amp;quot;#rmd-show-all-code&amp;quot;).click(function() {
    $(&amp;#39;div.r-code-collapse&amp;#39;).each(function() {
      $(this).collapse(&amp;#39;show&amp;#39;);
    });
  });
  $(&amp;quot;#rmd-hide-all-code&amp;quot;).click(function() {
    $(&amp;#39;div.r-code-collapse&amp;#39;).each(function() {
      $(this).collapse(&amp;#39;hide&amp;#39;);
    });
  });

  // index for unique code element ids
  var currentIndex = 1;

  // select all R code blocks
  var rCodeBlocks = $(&amp;#39;pre.sourceCode, pre.r, pre.python, pre.bash, pre.sql, pre.cpp, pre.stan&amp;#39;);
  rCodeBlocks.each(function() {

    // create a collapsable div to wrap the code in
    var div = $(&amp;#39;&amp;lt;div class=&amp;quot;collapse r-code-collapse&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;#39;);
    if (show)
      div.addClass(&amp;#39;in&amp;#39;);
    var id = &amp;#39;rcode-643E0F36&amp;#39; + currentIndex++;
    div.attr(&amp;#39;id&amp;#39;, id);
    $(this).before(div);
    $(this).detach().appendTo(div);

    // add a show code button right above
    var showCodeText = $(&amp;#39;&amp;lt;span&amp;gt;&amp;#39; + (show ? &amp;#39;Hide&amp;#39; : &amp;#39;Code&amp;#39;) + &amp;#39;&amp;lt;/span&amp;gt;&amp;#39;);
    var showCodeButton = $(&amp;#39;&amp;lt;button type=&amp;quot;button&amp;quot; class=&amp;quot;btn btn-default btn-xs code-folding-btn pull-right&amp;quot;&amp;gt;&amp;lt;/button&amp;gt;&amp;#39;);
    showCodeButton.append(showCodeText);
    showCodeButton
        .attr(&amp;#39;data-toggle&amp;#39;, &amp;#39;collapse&amp;#39;)
        .attr(&amp;#39;data-target&amp;#39;, &amp;#39;#&amp;#39; + id)
        .attr(&amp;#39;aria-expanded&amp;#39;, show)
        .attr(&amp;#39;aria-controls&amp;#39;, id);

    var buttonRow = $(&amp;#39;&amp;lt;div class=&amp;quot;row&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;#39;);
    var buttonCol = $(&amp;#39;&amp;lt;div class=&amp;quot;col-md-12&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;#39;);

    buttonCol.append(showCodeButton);
    buttonRow.append(buttonCol);

    div.before(buttonRow);

    // update state of button on show/hide
    div.on(&amp;#39;hidden.bs.collapse&amp;#39;, function () {
      showCodeText.text(&amp;#39;Code&amp;#39;);
    });
    div.on(&amp;#39;show.bs.collapse&amp;#39;, function () {
      showCodeText.text(&amp;#39;Hide&amp;#39;);
    });
  });

}
&amp;lt;/script&amp;gt;
&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
.code-folding-btn { margin-bottom: 4px; }
.row { display: flex; }
.collapse { display: none; }
.in { display:block }
&amp;lt;/style&amp;gt;
&amp;lt;script&amp;gt;
$(document).ready(function () {
  window.initializeCodeFolding(&amp;quot;show&amp;quot; === &amp;quot;hide&amp;quot;);
});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;In the &lt;code&gt;index.Rmd&lt;/code&gt;, fix it to be&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;markdown&#34;&gt;&lt;code&gt;---
title: &amp;quot;&amp;quot;
author: &amp;quot;&amp;quot;
date: &amp;#39;&amp;#39;
---
```{r setup, include=FALSE}

# Add a common class name for every chunks
knitr::opts_chunk$set(
  echo = TRUE)
```

```{r htmlTemp3, echo=FALSE, eval=TRUE}

codejs &amp;lt;- readr::read_lines(&amp;quot;js/codefolding.js&amp;quot;)
collapsejs &amp;lt;- readr::read_lines(&amp;quot;js/collapse.js&amp;quot;)
transitionjs &amp;lt;- readr::read_lines(&amp;quot;js/transition.js&amp;quot;)

htmlhead &amp;lt;- 
  paste(&amp;#39;
&amp;lt;script&amp;gt;&amp;#39;,
paste(transitionjs, collapse = &amp;quot;\n&amp;quot;),
&amp;#39;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;&amp;#39;,
paste(collapsejs, collapse = &amp;quot;\n&amp;quot;),
&amp;#39;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;&amp;#39;,
paste(codejs, collapse = &amp;quot;\n&amp;quot;),
&amp;#39;&amp;lt;/script&amp;gt;
&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
.code-folding-btn { margin-bottom: 4px; }
.row { display: flex; }
.collapse { display: none; }
.in { display:block }
&amp;lt;/style&amp;gt;
&amp;lt;script&amp;gt;
$(document).ready(function () {
  window.initializeCodeFolding(&amp;quot;show&amp;quot; === &amp;quot;show&amp;quot;);
});
&amp;lt;/script&amp;gt;
&amp;#39;, sep = &amp;quot;\n&amp;quot;)

readr::write_lines(htmlhead, path = &amp;quot;header.html&amp;quot;)
```
# Your heading 1
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;In your &lt;code&gt;_output.yaml&lt;/code&gt; change it to&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;bookdown::html_document2:
  includes:
    in_header: header.html
bookdown::gitbook:
  includes:
    in_header: header.html&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create your own hexagon in R</title>
      <link>https://mikenguyen.netlify.app/post/create-your-own-hexagon-in-r/</link>
      <pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/create-your-own-hexagon-in-r/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/create-your-own-hexagon-in-r/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;This is a super fast and easy way to create your first hexagon in R.&lt;/p&gt;
&lt;p&gt;Enjoy !!!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;hexSticker&amp;quot;)
library(hexSticker)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;hexSticker&amp;#39; was built under R version 4.0.5&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;imgurl &amp;lt;- &amp;quot;./logo.png&amp;quot;

plot(
  sticker(
    imgurl,
    package = &amp;quot;&amp;quot;,
    # p_size = 26,
    # p_color = &amp;quot;black&amp;quot;,
    
    # p_x = 1,
    # p_y = 1.5,
    
    s_x = 1,
    s_y = 1,
    s_width = 0.9,
    # s_height = 0.4,
    h_fill = &amp;quot;gray100&amp;quot;,
    h_color = &amp;quot;black&amp;quot;,
    h_size = 2,
    # spotlight = T,
    asp = 0.86,
    # filename = &amp;quot;inst/figures/imgfile.png&amp;quot;
    filename = &amp;quot;./imgfile.png&amp;quot;
  )
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://mikenguyen.netlify.app/post/create-your-own-hexagon-in-r/index.en_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::include_graphics(&amp;quot;./imgfile.png&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;imgfile.png&#34; width=&#34;259&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to add cover image to bookdown</title>
      <link>https://mikenguyen.netlify.app/post/how-to-add-cover-image-to-bookdown/</link>
      <pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/how-to-add-cover-image-to-bookdown/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/how-to-add-cover-image-to-bookdown/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;pre&gt;&lt;code&gt;&amp;lt;div style = &amp;quot;text-align: center&amp;quot;&amp;gt;

![](cover.jpg)

&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively, you can also use &lt;code&gt;r&lt;/code&gt; block&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::include_graphics(&amp;#39;cover.jpg&amp;#39;, dpi = NA)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Bookdown Statistics</title>
      <link>https://mikenguyen.netlify.app/post/bookdown-statistics/</link>
      <pubDate>Sun, 15 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/bookdown-statistics/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/bookdown-statistics/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;It’s possible to have basic statistics from bookdown using &lt;code&gt;connectapi&lt;/code&gt; (&lt;a href=&#34;https://github.com/sol-eng/connect-usage&#34;&gt;basic example&lt;/a&gt;). However, this feature is very limited.&lt;/p&gt;
&lt;p&gt;Hence, it is better to &lt;a href=&#34;(%7B%7B%3C%20relref%20%22../2021-08-14-how-to-connect-bookdown-with-google-analytics%22%20%3E%7D%7D)&#34;&gt;connect bookdown to Google Analytics&lt;/a&gt; to have better metrics. However, the trade-off is that you can’t see every book’s performance at once even though they are all under one account, since it is in one property. You could use Roll-up report, but then you will have to pay to use that feature.&lt;/p&gt;
&lt;p&gt;Another solution is to use Google Analytics API and write your R script to see customized performance of all your books.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to connect bookdown with google analytics</title>
      <link>https://mikenguyen.netlify.app/post/how-to-connect-bookdown-with-google-analytics/</link>
      <pubDate>Sat, 14 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/how-to-connect-bookdown-with-google-analytics/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/how-to-connect-bookdown-with-google-analytics/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Create &lt;a href=&#34;https://analytics.google.com/&#34;&gt;Google Analytics account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Choose “Analytics Accounts”&lt;/li&gt;
&lt;li&gt;Create “Properties &amp;amp; Apps”&lt;/li&gt;
&lt;li&gt;In “Data Streams”, “Add stream” with your website URL&lt;/li&gt;
&lt;li&gt;Under “Tagging Instructions”, click on gtag.js. You should see something like this:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!-- Global site tag (gtag.js) - Google Analytics --&amp;gt;
&amp;lt;script async src=&amp;quot;https://www.googletagmanager.com/gtag/js?id=G-DMNX2X65HQ&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag(&amp;#39;js&amp;#39;, new Date());

  gtag(&amp;#39;config&amp;#39;, &amp;#39;GA_MEASUREMENT_ID&amp;#39;);
&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where you see &lt;code&gt;GA_MEASUREMENT_ID&lt;/code&gt;, you will your own number.&lt;/p&gt;
&lt;ol start=&#34;6&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Create a &lt;code&gt;.html&lt;/code&gt; file and paste the code script and save it in your bookdown folder. Name it &lt;code&gt;google_analytics.html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;_output.yml&lt;/code&gt;, change it to&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;bookdown::gitbook:
  includes:
    in_header: [google_analytics.html]
  css: style.css&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;8&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Upload your bookdown&lt;/li&gt;
&lt;li&gt;Go to Google Analytics your Google Analytics account. And voila.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Template for Shiny</title>
      <link>https://mikenguyen.netlify.app/post/template-for-shiny/</link>
      <pubDate>Thu, 29 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/template-for-shiny/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/template-for-shiny/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;New Template to get you produce cool Shiny App instantly&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rmarkdown.rstudio.com/flexdashboard/index.html&#34;&gt;flexdashboard&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;flexdashboard&amp;quot;)
library(flexdashboard)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>CSS and SASS in Shiny</title>
      <link>https://mikenguyen.netlify.app/post/css-and-sass/</link>
      <pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/css-and-sass/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/css-and-sass/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;CSS = Cascading Style Sheets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Selector&lt;/li&gt;
&lt;li&gt;Declaration&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To add CSS to Shiny:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add styling to tags&lt;/li&gt;
&lt;li&gt;Add CSS to HTML header&lt;/li&gt;
&lt;li&gt;Add style sheets with the www directory (most ideal)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SASS = Systematically Awesome Style Sheets (built on top of CSS)&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;SASS&lt;/th&gt;
&lt;th&gt;CSS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Object oriented&lt;/td&gt;
&lt;td&gt;Statement oriented&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Allows nesting&lt;/td&gt;
&lt;td&gt;No nesting&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Allows variables&lt;/td&gt;
&lt;td&gt;Limited variable declaration&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Table by Pedro Silva from Appsilon&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>reproducible example (reprex)</title>
      <link>https://mikenguyen.netlify.app/post/reproducible-example-reprex/</link>
      <pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/reproducible-example-reprex/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/reproducible-example-reprex/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;install once per computer&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;reprex&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or part of `tidyverse&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;tidyverse&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can either call it in every session&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(reprex)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or put it in &lt;code&gt;.Rprofile&lt;/code&gt; for each machine to run whenever you open R&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (interactive()){
  suppressMessages(require(reprex))
}
options(
  reprex.advertise = FALSE, 
  reprex.si = TRUE, 
  reprex.style = TRUE,
  reprex.comment = &amp;quot;#;-&amp;quot;,
  reprex.tidyverse_quiet = FALSE
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to see your &lt;code&gt;.Rprofile&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;usethis::edit_r_profile()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since &lt;code&gt;reprex&lt;/code&gt; is an interactive workflow package, don’t use this with &lt;code&gt;dplyr&lt;/code&gt;, &lt;code&gt;ggplot2&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;When ever you want to ask people about your code, or ask them to debug it&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Copy your code to clipboard&lt;/li&gt;
&lt;li&gt;Simply run in your console&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;reprex()


reprex(advertise = TRUE, # To suppress ads
       si = TRUE, # to include session info
       style = TRUE, # restyle your code
       tidyverse_quiet = TRUE # suppress tidyverse message
       )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or instead of doing it manually, you can select your code, and under “Addins”. select “Render reprex”&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Scaling Shiny</title>
      <link>https://mikenguyen.netlify.app/post/scaling-shiny/</link>
      <pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/scaling-shiny/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/scaling-shiny/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;To solve the problem of scaling:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;From DevOps/IT:
&lt;ul&gt;
&lt;li&gt;Add memory, CPU&lt;/li&gt;
&lt;li&gt;Rstudio Connect set up for multiple machines&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;From R/Shiny engineer:
&lt;ul&gt;
&lt;li&gt;use &lt;a href=&#34;https://book.javascript-for-r.com/shiny-intro.html&#34;&gt;Javascript&lt;/a&gt; for less CPU usage&lt;/li&gt;
&lt;li&gt;extract computations: &lt;a href=&#34;https://appsilon.com/shiny-worker-package/&#34;&gt;Shiny worker&lt;/a&gt;, &lt;a href=&#34;https://www.rplumber.io/&#34;&gt;Plumber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;use a &lt;a href=&#34;https://shiny.rstudio.com/articles/overview.html&#34;&gt;database&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>New Pipe in R</title>
      <link>https://mikenguyen.netlify.app/post/new-pipe-in-r/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/new-pipe-in-r/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/new-pipe-in-r/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;You can read more in Michael Barrowman’s
&lt;a href=&#34;https://michaelbarrowman.co.uk/post/the-new-base-pipe/&#34;&gt;post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But the basic idea is that using the new pipe &lt;code&gt;|&amp;gt;&lt;/code&gt; from the &lt;code&gt;magrittr&lt;/code&gt; library
is much faster than your old pipe &lt;code&gt;%&amp;gt;%&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;magrittr&amp;quot;)
remotes::install_github(&amp;quot;Myko101/magrittrclassic&amp;quot;)
library(&amp;quot;magrittr&amp;quot;)
library(&amp;quot;tidyverse&amp;quot;)
doubler &amp;lt;- function(val) 2*val
x &amp;lt;- 1:10
bm &amp;lt;- bench::mark(
  standard = doubler(x),
  magrittrclassic = x %&amp;gt;&amp;gt;% doubler(),
  magrittr = x %&amp;gt;% doubler(),
  base = x |&amp;gt; doubler()
)
ggplot2::autoplot(bm)
bm2 &amp;lt;- bench::mark(
  standard = (function(y) 2*y)(x),
  magrittrclassic = x %&amp;gt;&amp;gt;% {2*.},
  magrittr = x %&amp;gt;% {2*.},
  base = x |&amp;gt; \(y) 2*y
)
ggplot2::autoplot(bm2)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Randomized Study Design</title>
      <link>https://mikenguyen.netlify.app/post/randomized-study-design/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/randomized-study-design/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/randomized-study-design/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;We can leverage R to create randomized studies using
&lt;a href=&#34;https://www.jdtrat.com/packages/shinysurveys/&#34;&gt;shinysurveys&lt;/a&gt; with learnr&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;shinysurveys&amp;quot;)
library(&amp;quot;learnr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ou can also use &lt;a href=&#34;https://formr.org/&#34;&gt;formr&lt;/a&gt; to create survey with &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fix for &#34;cannot allocate vector of size&#34;</title>
      <link>https://mikenguyen.netlify.app/post/fix-for-cannot-allocate-vector-of-size/</link>
      <pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/fix-for-cannot-allocate-vector-of-size/</guid>
      <description>
&lt;script src=&#34;https://mikenguyen.netlify.app/post/fix-for-cannot-allocate-vector-of-size/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;More package author’s introduction, please access this &lt;a href=&#34;https://cran.r-project.org/web/packages/disk.frame/readme/README.html&#34;&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Instead of loading everything at once into your RAM, you divide your data into chunks.
To quote author of the &lt;code&gt;disk.frame&lt;/code&gt; package: “we go from”R can only deal with data that fits in RAM&#34; to “R can deal with any data that fits on disk”.&#34; While &lt;code&gt;data.frame&lt;/code&gt; uses in-RAM to process, &lt;code&gt;disk.frame&lt;/code&gt; uses hard drive to store and process data.&lt;code&gt;disk.frame&lt;/code&gt; also allows parallel processing.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;disk.frame&amp;quot;) 
# setup_disk.frame() # sets up background workers equal to the number of CPU c res setup_disk.frame(workers =\ 2) \# or you number of workers options(future.globals.maxSize = \Inf) # large dataset can be transferred between sessions
# attr(data.df, &amp;quot;path&amp;quot;) # path to where the disk.frame is 


# to convert data.frame to a     disk.frame
data.df &amp;lt;- as.disk.frame(original_data_frame)

# to convert one large CSV
# takes care of splitting large CSV into smaller ones 
diskf &amp;lt;- disk.frame::csv_to_disk.frame(path_to_csv_file) # you can also specify,outdir = , overwrite = T.     

# to convert multiple CSV
multiple_CSV = c(path_to_csv_file1,path_to_csv_file2)
diskf = disk.frame::csv_to_disk.frame(multiple_CSV)

# for faster performance, specify which column to manipulate
result  = df %&amp;gt;% 
  srep(c(&amp;quot;column1&amp;quot;,&amp;quot;column2&amp;quot;)) %&amp;gt;%
  dplyr::filter()&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>caching for faster Shiny app</title>
      <link>https://mikenguyen.netlify.app/post/caching-for-faster-shiny-app/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/caching-for-faster-shiny-app/</guid>
      <description>


&lt;p&gt;To have faster performance with Shiny App, you can pass this command to yoru script.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# %&amp;gt;% bindCache()&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>create your own package</title>
      <link>https://mikenguyen.netlify.app/post/create-your-own-package/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/create-your-own-package/</guid>
      <description>


&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;usethis&amp;quot;)
create_package(path = &amp;quot;../package_name&amp;quot;)
use_description()
usethis::is_package()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;load library&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(devtools)
load_all() # Cmd/Ctrl + Shift + L

# use_pipe()
use_package(&amp;quot;dplyr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You also need to modify your description file&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Imports:
  ggplot2
  dplyr

# install all dependencies in DESCRIPTION
install_deps()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;create function&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;your_own_function &amp;lt;- function(){
  
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Test your package&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test() # Cmd/Ctrl + Shift + T&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;check Malcolm Barrett’s &lt;a href=&#34;https://zenartofrpkgs.netlify.app/#1&#34;&gt;slides&lt;/a&gt; for more detail&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>learnr to guide students</title>
      <link>https://mikenguyen.netlify.app/post/learnr-to-guide-students/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/learnr-to-guide-students/</guid>
      <description>


&lt;p&gt;Teaching statistics or data science, we can use &lt;code&gt;learnr&lt;/code&gt; package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# library(&amp;quot;learnr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To collect data, we can use &lt;code&gt;learnrhash&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# library(&amp;quot;learnrhash&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Remember to adjust parameters so your &lt;code&gt;Shinyapp.io&lt;/code&gt; can handle the number of students you have in the class. Or you can upload it to GitHub, then students can install to your local machine later.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>use dplyr in Python - siuba library</title>
      <link>https://mikenguyen.netlify.app/post/use-dplyr-in-python-siuba-library/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/use-dplyr-in-python-siuba-library/</guid>
      <description>


&lt;p&gt;Use siuba library in Python to preserve all your skills from &lt;code&gt;dplyr&lt;/code&gt; package in &lt;code&gt;R&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;pip install siuba&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can see TidyTuesday for tutorial&lt;/p&gt;
&lt;p&gt;Or &lt;a href=&#34;https://learn.siuba.org/intro-data-science/&#34;&gt;Learn Siuba&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Connect WRDS in R</title>
      <link>https://mikenguyen.netlify.app/post/connect-wrds-in-r/</link>
      <pubDate>Tue, 29 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/connect-wrds-in-r/</guid>
      <description>
&lt;link href=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Connect from R to Wharton Research Data Services&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# to set up connection from R to WRDS (https://wrds-www.wharton.upenn.edu/pages/support/programming-wrds/programming-r/r-from-your-computer/)
library(RPostgres)
library(dplyr)

# I&amp;#39;ve set up wrds connection before hand. Please use your username and password here.

# wrds &amp;lt;- dbConnect(Postgres(),
#                   host=&amp;#39;wrds-pgdata.wharton.upenn.edu&amp;#39;,
#                   port=9737,
#                   dbname=&amp;#39;wrds&amp;#39;,
#                   sslmode=&amp;#39;require&amp;#39;,
#                   user=&amp;#39;&amp;#39;)

# Check variables (column headers) in COMP ANNUAL FUNDAMENTAL
#uses the already-established wrds connection to prepare the SQL query string and save the query as the result res.
# check avaiable databases: https://wrds-web.wharton.upenn.edu/wrds/tools/variable.cfm?vendor_id=7
res &amp;lt;- dbSendQuery(wrds, &amp;quot;select column_name
                   from information_schema.columns
                   where table_schema=&amp;#39;compa&amp;#39;
                   and table_name=&amp;#39;funda&amp;#39;
                   order by column_name&amp;quot;)
data &amp;lt;- dbFetch(res, n=-1) # fetches the data that results from running the query res against wrds and stores it as data
dbClearResult(res) # closes the connection
head(data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   column_name
## 1       acchg
## 2        acco
## 3       accrt
## 4     acctchg
## 5     acctstd
## 6        acdo&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# select everything
res &amp;lt;- dbSendQuery(wrds, &amp;quot;select * from compa.funda&amp;quot;)

# from compa.funda

# only select the following variables
res &amp;lt;- dbSendQuery(wrds, &amp;quot;select gvkey, datadate, fyear, indfmt, consol, popsrc, datafmt, tic, cusip, conm, curcd, fyr, act, at, bkvlps, ceq, ch, che, dltt, dlc, emp, np, exchg, cik, costat, naicsh,mkvalt from compa.funda&amp;quot;) #check variables from (https://wrds-web.wharton.upenn.edu/wrds/ds/comp/funda/index.cfm?navId=80)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in result_create(conn@ptr, statement): Closing open result set,
## cancelling previous query&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- dbFetch(res, n=-1)
dbClearResult(res)

head(data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    gvkey   datadate fyear indfmt consol popsrc datafmt  tic     cusip
## 1 001000 1961-12-31  1961   INDL      C      D     STD AE.2 000032102
## 2 001000 1962-12-31  1962   INDL      C      D     STD AE.2 000032102
## 3 001000 1963-12-31  1963   INDL      C      D     STD AE.2 000032102
## 4 001000 1964-12-31  1964   INDL      C      D     STD AE.2 000032102
## 5 001000 1965-12-31  1965   INDL      C      D     STD AE.2 000032102
## 6 001000 1966-12-31  1966   INDL      C      D     STD AE.2 000032102
##                    conm curcd fyr   act    at bkvlps   ceq ch   che  dltt   dlc
## 1 A &amp;amp; E PLASTIK PAK INC   USD  12    NA    NA 2.4342    NA NA    NA 0.100    NA
## 2 A &amp;amp; E PLASTIK PAK INC   USD  12    NA    NA 3.0497 0.552 NA    NA 0.000    NA
## 3 A &amp;amp; E PLASTIK PAK INC   USD  12 0.408    NA 2.9731 0.553 NA    NA 0.015    NA
## 4 A &amp;amp; E PLASTIK PAK INC   USD  12 0.718 1.416 3.0969 0.607 NA 0.269 0.522 0.088
## 5 A &amp;amp; E PLASTIK PAK INC   USD  12 0.725 2.310 2.3835 0.491 NA 0.031 1.154 0.300
## 6 A &amp;amp; E PLASTIK PAK INC   USD  12 1.015 2.430 3.8082 0.834 NA 0.063 1.109 0.124
##   emp    np exchg  cik costat naicsh mkvalt
## 1  NA    NA    12 &amp;lt;NA&amp;gt;      I     NA     NA
## 2  NA    NA    12 &amp;lt;NA&amp;gt;      I     NA     NA
## 3  NA    NA    12 &amp;lt;NA&amp;gt;      I     NA     NA
## 4  NA 0.000    12 &amp;lt;NA&amp;gt;      I     NA     NA
## 5  NA 0.225    12 &amp;lt;NA&amp;gt;      I     NA     NA
## 6  NA 0.050    12 &amp;lt;NA&amp;gt;      I     NA     NA&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>flipbooks</title>
      <link>https://mikenguyen.netlify.app/post/flipbooks/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/flipbooks/</guid>
      <description>
&lt;link href=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Flipbooks can be used for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Education&lt;/li&gt;
&lt;li&gt;Reference&lt;/li&gt;
&lt;li&gt;Communication&lt;/li&gt;
&lt;li&gt;Transparency&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(flipbookr)

cars %&amp;gt;%
  filter(speed &amp;gt; 4) %&amp;gt;%
  ggplot() +
  aes(x = speed) + #BREAK
  aes(y = dist) + #BREAK
  geom_point(
    alpha = .8, 
    color = &amp;quot;blue&amp;quot; 
    ) + 
  aes(size = speed) #BREAK&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>psychological experiments</title>
      <link>https://mikenguyen.netlify.app/post/psychological-experiments/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/psychological-experiments/</guid>
      <description>
&lt;link href=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Use &lt;code&gt;jaysire&lt;/code&gt; package to build flexible behavioral experiments in R. Why?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Better workflow&lt;/li&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;li&gt;Cutomizable&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;remotes::install_github(&amp;quot;djnavarro/jaysire&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>renv</title>
      <link>https://mikenguyen.netlify.app/post/renv/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/renv/</guid>
      <description>
&lt;link href=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Check where your package is installed&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;find.package(&amp;quot;dplyr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;C:/Program Files/R/R-4.0.3/library/dplyr&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All projects use the same library path. Then for each project, you need different library dependencies.&lt;/p&gt;
&lt;div id=&#34;intializing-a-project&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Intializing a project&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;renv::init()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A &lt;code&gt;.Rprofile&lt;/code&gt; is created that forks the current R libraries.&lt;/p&gt;
&lt;p&gt;Now, you can work as before. But the current state of packages would not change.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;snapshot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Snapshot&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;renv::snapshot()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The function tells you the current state of a project, and whether you can to update any packages in that project.&lt;/p&gt;
&lt;p&gt;The lockfile is a JSON file that tells you packages installed in your project, versions, and sources.&lt;/p&gt;
&lt;p&gt;This is useful for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Time capsules (you can return to this project in the future without any unexpected changes)&lt;/li&gt;
&lt;li&gt;Collaborative workflows (different people might have different packages installed).&lt;/li&gt;
&lt;li&gt;Deployments (you can run your project remotely)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;restore&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Restore&lt;/h2&gt;
&lt;p&gt;To restore the previously snapshot, you can use&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;renv::restore()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## * The library is already synchronized with the lockfile.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Patent Databases</title>
      <link>https://mikenguyen.netlify.app/post/patent-databases/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/patent-databases/</guid>
      <description>
&lt;link href=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Comprehensive patent data can be found &lt;a href=&#34;https://eml.berkeley.edu/~bhhall/patents.html&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;United States&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sites.google.com/site/patentdataproject/Home/downloads&#34;&gt;NBER patent data&lt;/a&gt; or &lt;a href=&#34;https://eml.berkeley.edu/~bhhall/NBER06.html&#34;&gt;link&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Search link for individual patent: &lt;a href=&#34;http://patft.uspto.gov/&#34;&gt;link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.uspto.gov/api-catalog&#34;&gt;Patent API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;USPTO - United States patent and Trademark Office
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.uspto.gov/web/offices/ac/ido/oeip/taf/reports_topo.htm&#34;&gt;Patent ranking by orgs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bulkdata.uspto.gov/&#34;&gt;Bulk Data Storage System:&lt;/a&gt; repository for raw public bulk data
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.uspto.gov/ip-policy/economic-research/research-datasets&#34;&gt;For Researcher&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.uspto.gov/learning-and-resources/electronic-data-products/patent-assignment-dataset&#34;&gt;Patent Assignment Dataset&lt;/a&gt; details information of patent assignment since 1970 with &lt;a href=&#34;https://www.uspto.gov/sites/default/files/documents/pat_assign_dataset_schema.pdf&#34;&gt;schema&lt;/a&gt; and &lt;a href=&#34;https://www.uspto.gov/sites/default/files/documents/USPTO_Patents_Assignment_Dataset_WP.pdf&#34;&gt;description&lt;/a&gt; and &lt;a href=&#34;https://github.com/USPTO/PatentPublicData&#34;&gt;code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.patentsview.org/download/pregrantpublications.html&#34;&gt;Pre-Grant Publications Data Download Tables&lt;/a&gt; with example &lt;a href=&#34;https://github.com/PatentsView/PatentsView-Code-Snippets/blob/master/04_bulk_pregrant_read_in/R%20Scripts/rawassignee.Rmd&#34;&gt;code&lt;/a&gt; note that organizaiton here is different from Compustat and CRSP, hard to match.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ped.uspto.gov/peds/&#34;&gt;Patent Examiniation Data system&lt;/a&gt;: records of USPTO patent application, patent filing status and transaction history data&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.uspto.gov/learning-and-resources/electronic-data-products/trademark-assignment-dataset&#34;&gt;Trademark Assignment Dataset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.uspto.gov/learning-and-resources/electronic-data-products/patent-assignment-dataset&#34;&gt;Patent Assignment Dataset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenodo.org/record/3594694#.X9hH59hKgdW&#34;&gt;Duke Innovation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://iu.app.box.com/v/patents&#34;&gt;Matched US patents to CRSP 1926 - 2010&lt;/a&gt;: Leonid Kogan, Dimitris Papanikolaou, Amit Seru, and Noah Stoffman. &lt;a href=&#34;https://paper.dropbox.com/doc/U.S.-Patent-Data-1926-2010-t5nuNWnTH1InM0gyxkizL&#34;&gt;Description&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kelley.iu.edu/nstoffma/&#34;&gt;Maintainer&lt;/a&gt; with &lt;a href=&#34;https://github.com/KPSS2017/Technological-Innovation-Resource-Allocation-and-Growth-Extended-Data&#34;&gt;code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://www.uspto.gov/patents-application-process/applying-online/patent-number&#34;&gt;Recognizing Patent&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Utility: 6 - 8 digits lasts for 20 years from the filed date&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://www.uspto.gov/patent/laws-and-regulations/patent-term-calculator&#34;&gt;Changes to Patent Terms&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Year filed&lt;/th&gt;
&lt;th&gt;Maximum term of validity&lt;/th&gt;
&lt;th&gt;Act&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;1790–1835&lt;/td&gt;
&lt;td&gt;14 years from issuance&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Patent_Act_of_1790&#34;&gt;Patent Act of 1790&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;1836–1860&lt;/td&gt;
&lt;td&gt;21 years from issuance&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Patent_Act_of_1836&#34;&gt;Patent Act of 1836&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;1861– 1994&lt;/td&gt;
&lt;td&gt;17 years from issuance&lt;/td&gt;
&lt;td&gt;Congress changed term&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;1994 - now&lt;/td&gt;
&lt;td&gt;20 years from filing&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Uruguay_Round_Agreements_Act&#34;&gt;Uruguay Round Agreements Act&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Table based on &lt;a href=&#34;https://en.wikipedia.org/wiki/Term_of_patent_in_the_United_States&#34;&gt;wikipedia&lt;/a&gt; and &lt;a href=&#34;https://www.uspto.gov/patent/laws-and-regulations/patent-term-calculator&#34;&gt;USPTO&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reissue (RE######)&lt;/li&gt;
&lt;li&gt;Plant Patent (PP######) lasts for 20 years from the application date&lt;/li&gt;
&lt;li&gt;Design (D#######) lasts for 14 years from the granted date&lt;/li&gt;
&lt;li&gt;Additions or Improvements (AI#######)&lt;/li&gt;
&lt;li&gt;X Patents (X#######)&lt;/li&gt;
&lt;li&gt;H Documents (H#######)&lt;/li&gt;
&lt;li&gt;T Documents (T#######)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Worldwide&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.epo.org/searching-for-patents/business/patstat.html#tab-1&#34;&gt;EPO and OECD&lt;/a&gt; data&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wipo.int/econ_stat/en/economics/research/&#34;&gt;wipo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Matching process with CRSP or Compustat&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wrds-www.wharton.upenn.edu/pages/data/contributed-data/kpss-technological-innovation-resource-allocation-and-growth/&#34;&gt;KPSS Technological Innovation, Resource Allocation, and Growth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://patents.darden.virginia.edu/documents/DataConstructionDetails_v01.pdf&#34;&gt;UVA Darden Global Corporate Patent Dataset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://voices.uchicago.edu/miaoliu/data-page/&#34;&gt;Miao Liu&lt;/a&gt; Note that you need Bing API and use Python &lt;a href=&#34;https://github.com/danielm-github/patentsmatch_bingsearchapproach&#34;&gt;Github repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://users.nber.org/~jbessen/matchdoc.pdf&#34;&gt;NBER Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Linking Financial Databases (CRSP and Compustat)</title>
      <link>https://mikenguyen.netlify.app/post/link_crsp_compustat/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/link_crsp_compustat/</guid>
      <description>
&lt;link href=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://mikenguyen.netlify.app/rmarkdown-libs/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Information can be found in &lt;a href=&#34;https://www.otago.ac.nz/library/pdf/CRSPCompustatguide09.pdf&#34;&gt;CRSP/COMPUSTAT MERGED DATABASE GUIDE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Change Identifiers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ticker&lt;/strong&gt;: can be reassign to another company - abbreviation used to uniquely identify publicly-traded shares of a stock&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CUSIP&lt;/strong&gt;: A company can have multiple CUSIPS due to structural changes. - nine-character code assigned by the CUSIP Service Bureau to identify various securities&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Permanent Identifiers&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CRSP (maintained by Chicago BOoth CRSP)
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PERMCO&lt;/strong&gt;: is a unique permanent company level identifier (even under name change)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PERMNO&lt;/strong&gt;: is a unique stock (share class) level identifier. One company can have multiple share classes. (1 PERMNO -&amp;gt; 1 PERMCO, 1 -&amp;gt; multiple PERMNOs)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Compustat-Capital IQ (maintained by S&amp;amp;P)
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GVKEY&lt;/strong&gt;: is a unique number assigned to each company.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;CRSP&lt;/th&gt;
&lt;th&gt;COMPUSTAT&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Time since&lt;/td&gt;
&lt;td&gt;1925&lt;/td&gt;
&lt;td&gt;1950&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Companies&lt;/td&gt;
&lt;td&gt;listed in U.S. Exchange&lt;/td&gt;
&lt;td&gt;U.S. + Canada&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Report&lt;/td&gt;
&lt;td&gt;Daily and Monthly&lt;/td&gt;
&lt;td&gt;Quarterly and Annually&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Apache Arrow</title>
      <link>https://mikenguyen.netlify.app/post/apache-arrow/</link>
      <pubDate>Sun, 06 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/apache-arrow/</guid>
      <description>
&lt;link href=&#34;index_files/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;index_files/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;more information can be found in &lt;a href=&#34;https://ursalabs.org/&#34;&gt;URSA Labs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This example is from &lt;a href=&#34;https://ursalabs.org/arrow-r-nightly/articles/dataset.html&#34;&gt;Arrow Vignettes&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;arrow&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;arrow&lt;/h1&gt;
&lt;p&gt;best when working with big data&lt;/p&gt;
&lt;div id=&#34;prep&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Prep&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;arrow&amp;quot;, warn.conflicts = FALSE)
library(&amp;quot;dplyr&amp;quot;, warn.conflicts = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;check if S3 support is included.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;arrow::arrow_with_s3()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If TRUE, sync data locally import from &lt;a href=&#34;https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page&#34;&gt;https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;arrow::copy_files(&amp;quot;s3://ursa-labs-taxi-data&amp;quot;, &amp;quot;nyc-taxi&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;since the data is in Parquet format, we use&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ds &amp;lt;- open_dataset(&amp;quot;nyc-taxi&amp;quot;, partitioning = c(&amp;quot;year&amp;quot;, &amp;quot;month&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then you can start using data set as usual&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ds&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>doParallel</title>
      <link>https://mikenguyen.netlify.app/post/doparallel/</link>
      <pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/doparallel/</guid>
      <description>
&lt;link href=&#34;index_files/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;index_files/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;packages&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Packages&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#install.packages(&amp;quot;doParallel&amp;quot;)
library(&amp;quot;doParallel&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: foreach&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: iterators&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: parallel&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check how long a loop takes&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;start &amp;lt;- proc.time()
for (i in 1:10){
    sqrt(i)
}
base_loop=(proc.time()-start)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check number of cores&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;doParallel&amp;quot;)
detectCores()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 8&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;getDoParWorkers() #current number of worker&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;registerDoSEQ() #switch back to original
getDoParWorkers()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let R know how many cores you want to use&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;registerDoParallel(6)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You shouldn’t use all the cores since your computer might want some background programs to run.&lt;/p&gt;
&lt;p&gt;We can also create cluster of workers&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cluster = makeCluster(2)
registerDoParallel(cluster)
system.time(foreach(i=1:100) %dopar% sum((1:i)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    user  system elapsed 
##    0.03    0.00    0.04&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;stopCluster(cluster)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Compare different loops&lt;/p&gt;
&lt;p&gt;&lt;code&gt;%do%&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;start &amp;lt;- proc.time()
foreach(i=1:10) %do% {
    sqrt(i)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [[1]]
## [1] 1
## 
## [[2]]
## [1] 1.414214
## 
## [[3]]
## [1] 1.732051
## 
## [[4]]
## [1] 2
## 
## [[5]]
## [1] 2.236068
## 
## [[6]]
## [1] 2.44949
## 
## [[7]]
## [1] 2.645751
## 
## [[8]]
## [1] 2.828427
## 
## [[9]]
## [1] 3
## 
## [[10]]
## [1] 3.162278&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;do_loop=(proc.time()-start)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;%dopar%&lt;/code&gt; loop&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cl &amp;lt;- makeCluster(2)
registerDoParallel(cl)
start &amp;lt;- proc.time()
foreach(i = 1:10, .combine = &amp;#39;c&amp;#39;) %dopar% {
  sqrt(i)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 1.000000 1.414214 1.732051 2.000000 2.236068 2.449490 2.645751 2.828427
##  [9] 3.000000 3.162278&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dopar_loop=(proc.time()-start)
stopCluster(cl)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(rbind(base_loop,do_loop,dopar_loop)[,1:3])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            user.self sys.self elapsed
## base_loop       0.01        0    0.02
## do_loop         0.02        0    0.01
## dopar_loop      0.02        0    0.04&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;%do%&lt;/code&gt; does not use more than base core, but &lt;code&gt;%dopar%&lt;/code&gt; uses the number of cores that we specify in &lt;code&gt;registerDoParallel&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;doParallel::mclapply&lt;/code&gt; is the equivalent of &lt;code&gt;lapply&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>https://mikenguyen.netlify.app/post/hello-r-markdown/</link>
      <pubDate>Mon, 23 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://mikenguyen.netlify.app/post/hello-r-markdown/</guid>
      <description>
&lt;link href=&#34;index_files/anchor-sections/anchor-sections.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;index_files/anchor-sections/anchor-sections.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;include Shiny App&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::include_app(&amp;quot;https://mikenguyen.shinyapps.io/first-app/&amp;quot;, height = &amp;quot;100%&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;iframe src=&#34;https://mikenguyen.shinyapps.io/first-app/?showcase=0&#34; width=&#34;672&#34; height=&#34;100%&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;Or you can embed directly as iframe.&lt;br /&gt;
But remember to include &lt;code&gt;runtime: shiny&lt;/code&gt; in the YAML metadata&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;iframe height=&amp;quot;800&amp;quot; width=&amp;quot;100%&amp;quot; title=&amp;quot;first app&amp;quot; name=&amp;quot;first app&amp;quot; allowfullscreen=&amp;quot;true&amp;quot; loading=&amp;quot;eager&amp;quot; scrolling=&amp;quot;auto&amp;quot;  style=&amp;quot;border:none;&amp;quot; src=&amp;quot;https://mikenguyen.shinyapps.io/first-app/&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;iframe height=&#34;800&#34; width=&#34;100%&#34; title=&#34;first app&#34; name=&#34;first app&#34; allowfullscreen=&#34;true&#34; loading=&#34;eager&#34; scrolling=&#34;auto&#34; style=&#34;border:none;&#34; src=&#34;https://mikenguyen.shinyapps.io/first-app/&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)
##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
## 
## Call:
## lm(formula = dist ~ speed, data = cars)
## 
## Coefficients:
## (Intercept)        speed  
##     -17.579        3.932&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Including Plots&lt;/h1&gt;
&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mar = c(0, 1, 0, 1))
pie(c(280, 60, 20), c(&amp;quot;Sky&amp;quot;, &amp;quot;Sunny side of pyramid&amp;quot;, &amp;quot;Shady side of pyramid&amp;quot;), col = c(&amp;quot;#0292D8&amp;quot;, 
    &amp;quot;#F7EA39&amp;quot;, &amp;quot;#C4B632&amp;quot;), init.angle = -50, border = NA)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:pie&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;index_files/figure-html/pie-1.png&#34; alt=&#34;A fancy pie chart.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: A fancy pie chart.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
